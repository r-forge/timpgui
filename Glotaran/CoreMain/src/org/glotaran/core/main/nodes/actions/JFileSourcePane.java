/*
 *  Puzzle-GIS - OpenSource mapping program
 *  http://docs.codehaus.org/display/PUZZLEGIS
 *  Copyright (C) 2007-2008 Puzzle-GIS
 *  
 *  GPLv3 + Classpath exception
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.glotaran.core.main.nodes.actions;

import java.io.File;
import java.util.Collection;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.glotaran.core.interfaces.TGDatasetInterface;
import org.openide.util.Lookup;

final class JFileSourcePane extends javax.swing.JPanel {

    private final Collection<? extends TGDatasetInterface> services;

    JFileSourcePane() {
        this(null);
    }

    /** 
     * Creates new form panel, similar to a JFileChooser panel.
     * @param openPath : default path to open
     */
    JFileSourcePane(final File openPath) {

        initComponents();
        gui_choose.setAcceptAllFileFilterUsed(true);

        services = Lookup.getDefault().lookupAll(TGDatasetInterface.class);

        for (final TGDatasetInterface service : services) {
            gui_choose.addChoosableFileFilter(new FileNameExtensionFilter(service.getFilterString(), service.getExtention()));
        }

        if (openPath != null) {
            gui_choose.setCurrentDirectory(openPath);
        }
        gui_choose.setMultiSelectionEnabled(true);
    }

    /**
     * Go to the given directory.
     */
    final void setDirectory(final File directory) {
        gui_choose.setCurrentDirectory(directory);
    }

    /**
     * Get the current directory.
     */
    final File getDirectory() {
        return gui_choose.getCurrentDirectory();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gui_choose = new javax.swing.JFileChooser();

        gui_choose.setControlButtonsAreShown(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(gui_choose, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(gui_choose, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser gui_choose;
    // End of variables declaration//GEN-END:variables

    final File[] getSelectedFiles() {
        return gui_choose.getSelectedFiles();
    }
}
