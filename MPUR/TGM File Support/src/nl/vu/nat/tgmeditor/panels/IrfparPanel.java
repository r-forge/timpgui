package nl.vu.nat.tgmeditor.panels;

import javax.swing.JComponent;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import nl.vu.nat.tgmfilesupport.TgmDataObject;
import nl.vu.nat.tgmodels.tgm.IrfparPanelModel;
import org.netbeans.modules.xml.multiview.ui.SectionInnerPanel;
import org.netbeans.modules.xml.multiview.ui.SectionView;


/*
 * KinIrfparPanel.java
 *
 * Created on August 3, 2008, 11:01 AM
 */
public class IrfparPanel extends SectionInnerPanel {

    private TgmDataObject dObj;
    private IrfparPanelModel irfparPanelModel;
    private IrfparTableModel model;
    private Object[] defRow;
    private Object[] colNames;
    private Object[] newRow;

    public IrfparPanel(SectionView view, TgmDataObject dObj, IrfparPanelModel irfparPanelModel) {
        super(view);
        this.dObj = dObj;
        this.irfparPanelModel = irfparPanelModel;
        initComponents();

        jSNumOfIrfParameters.setModel(new SpinnerNumberModel(irfparPanelModel.getIrf().size(), 0, null, 1));

        defRow = new Object[]{new Double(0), new Boolean(false)};
        colNames = new Object[]{"Irf parameters (location, width, ...).", "Fixed"};
        model = new IrfparTableModel(colNames, 0);
        for (int i = 0; i < irfparPanelModel.getIrf().size(); i++) {
            if (irfparPanelModel.getIrf().get(i) != null) {
                newRow = new Object[]{
                            irfparPanelModel.getIrf().get(i),
                            irfparPanelModel.getFixed().get(i)
                        };
                model.addRow(newRow);
            } else {
                model.addRow(defRow);
            }

            jTIrfparTable.setModel(model);
        }

        if (irfparPanelModel.isDispmu()) {
            if (irfparPanelModel.getDispmufun().compareTo("poly") == 0) {
                jRDispmufun_poly.setSelected(true);
            }
            if (irfparPanelModel.getDispmufun().compareTo("discrete") == 0) {
                jRDispmufun_discrete.setSelected(true);
            }
        } else {
            jRDispmufun_no.setSelected(true);
        }
        jParmuTextfield.setText(irfparPanelModel.getParmu());

        if (irfparPanelModel.isDisptau()) {
            if (irfparPanelModel.getDisptaufun().compareTo("poly") == 0) {
                jRDisptaufun_poly.setSelected(true);
            }
            if (irfparPanelModel.getDisptaufun().compareTo("discrete") == 0) {
                jRDisptaufun_discrete.setSelected(true);
            }
        } else {
            jRDisptaufun_no.setSelected(true);
        }
        jPartauTextfield.setText(irfparPanelModel.getPartau());

        jTPolyDispersion.setText(String.valueOf(irfparPanelModel.getLamda()));


        // Add listerners
        jTIrfparTable.getModel().addTableModelListener(model);
        //Radiobuttons
        addModifier(jRDispmufun_no);
        addModifier(jRDispmufun_poly);
        addModifier(jRDispmufun_discrete);
        addModifier(jRDisptaufun_no);
        addModifier(jRDisptaufun_poly);
        addModifier(jRDisptaufun_discrete);
        // Textfields:
        addModifier(jParmuTextfield);
        addModifier(jPartauTextfield);
        addModifier(jTPolyDispersion);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jSNumOfIrfParameters = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTIrfparTable = new javax.swing.JTable();
        jRDispmufun_poly = new javax.swing.JRadioButton();
        jRDispmufun_discrete = new javax.swing.JRadioButton();
        jRDisptaufun_poly = new javax.swing.JRadioButton();
        jRDisptaufun_no = new javax.swing.JRadioButton();
        jParmuTextfield = new javax.swing.JTextField();
        jPartauTextfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jRDisptaufun_discrete = new javax.swing.JRadioButton();
        jRDispmufun_no = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTPolyDispersion = new javax.swing.JTextField();

        jLabel4.setText("Number of IRF parameters");

        jSNumOfIrfParameters.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSNumOfIrfParametersStateChanged(evt);
                jSNumOfComponents2StateChanged(evt);
            }
        });

        jScrollPane3.setViewportView(jTIrfparTable);

        buttonGroup1.add(jRDispmufun_poly);
        jRDispmufun_poly.setText("\"poly\" (as polynomial function)");
        jRDispmufun_poly.setToolTipText("disptaufun: *** Object of class \"character\" describing the functional form of the disper-\n    sion of the IRF width parameter; if equal to \"discrete\" then the IRF width is parame-\n    terized per element of x2 and partau should have the same length as x2. defaults to a\n    polynomial description\n");

        buttonGroup1.add(jRDispmufun_discrete);
        jRDispmufun_discrete.setText("\"discrete\" (with one parameter per-wavelength");
        jRDispmufun_discrete.setToolTipText("disptaufun: *** Object of class \"character\" describing the functional form of the disper-\n    sion of the IRF width parameter; if equal to \"discrete\" then the IRF width is parame-\n    terized per element of x2 and partau should have the same length as x2. defaults to a\n    polynomial description\n");
        jRDispmufun_discrete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRDispmufun_discreteActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRDisptaufun_poly);
        jRDisptaufun_poly.setText("\"poly\" (as polynomial function)");

        buttonGroup2.add(jRDisptaufun_no);
        jRDisptaufun_no.setSelected(true);
        jRDisptaufun_no.setText("no");

        jParmuTextfield.setColumns(10);
        jParmuTextfield.setToolTipText("parmu: *** Object of class \"list\" of starting values for the dispersion model for the IRF location\n[Enter as R string]");

        jPartauTextfield.setColumns(10);
        jPartauTextfield.setToolTipText("partau: *** Object of class \"vector\" of starting values for the dispersion model for the IRF FWHM\n[Enter as R string]\n");
        jPartauTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPartauTextfieldActionPerformed(evt);
            }
        });

        jLabel5.setText("parameters for dispersion of IRF location");

        jLabel6.setText("model dispersion of IRF width?");

        buttonGroup2.add(jRDisptaufun_discrete);
        jRDisptaufun_discrete.setText("\"discrete\" (with one parameter per-wavelength");
        jRDisptaufun_discrete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRDisptaufun_discreteActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRDispmufun_no);
        jRDispmufun_no.setSelected(true);
        jRDispmufun_no.setText("no");
        jRDispmufun_no.setToolTipText("disptaufun: *** Object of class \"character\" describing the functional form of the disper-\n    sion of the IRF width parameter; if equal to \"discrete\" then the IRF width is parame-\n    terized per element of x2 and partau should have the same length as x2. defaults to a\n    polynomial description\n");

        jLabel3.setText("model dispersion of IRF location?");

        jLabel1.setText("Center wavelength for poly dispersion");

        jTPolyDispersion.setPreferredSize(new java.awt.Dimension(4, 18));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addComponent(jLabel4)
                            .addGap(28, 28, 28)
                            .addComponent(jSNumOfIrfParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jRDispmufun_poly, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRDispmufun_discrete, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRDisptaufun_poly, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRDisptaufun_no, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jParmuTextfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPartauTextfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRDisptaufun_discrete, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRDispmufun_no, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addComponent(jTPolyDispersion, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSNumOfIrfParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRDispmufun_no)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRDispmufun_poly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRDispmufun_discrete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jParmuTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRDisptaufun_no)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRDisptaufun_poly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRDisptaufun_discrete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPartauTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTPolyDispersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void jSNumOfIrfParametersStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSNumOfIrfParametersStateChanged
// TODO add your handling code here:]
    if ((Integer) jSNumOfIrfParameters.getValue() > model.getRowCount()) {
        model.addRow(defRow);
    } else {
        model.removeRow(model.getRowCount() - 1);
    }
    jTIrfparTable.setModel(model);
    setValue(jTIrfparTable,this);    
}//GEN-LAST:event_jSNumOfIrfParametersStateChanged

private void jRDispmufun_discreteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRDispmufun_discreteActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jRDispmufun_discreteActionPerformed

private void jPartauTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPartauTextfieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jPartauTextfieldActionPerformed

private void jRDisptaufun_discreteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRDisptaufun_discreteActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jRDisptaufun_discreteActionPerformed

private void jSNumOfComponents2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSNumOfComponents2StateChanged
// TODO add your handling code here:
}//GEN-LAST:event_jSNumOfComponents2StateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jParmuTextfield;
    private javax.swing.JTextField jPartauTextfield;
    private javax.swing.JRadioButton jRDispmufun_discrete;
    private javax.swing.JRadioButton jRDispmufun_no;
    private javax.swing.JRadioButton jRDispmufun_poly;
    private javax.swing.JRadioButton jRDisptaufun_discrete;
    private javax.swing.JRadioButton jRDisptaufun_no;
    private javax.swing.JRadioButton jRDisptaufun_poly;
    private javax.swing.JSpinner jSNumOfIrfParameters;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTIrfparTable;
    private javax.swing.JTextField jTPolyDispersion;
    // End of variables declaration//GEN-END:variables
    @Override
    public void setValue(JComponent source, Object value) {
        if (source == jTIrfparTable) {
            //Adds or removes a colum
            if (model.getRowCount() > irfparPanelModel.getIrf().size()) {
                irfparPanelModel.getIrf().add(new Double(0));
                irfparPanelModel.getFixed().add(new Boolean(false));
                endUIChange();
            } else if (model.getRowCount() < irfparPanelModel.getIrf().size()) {
                irfparPanelModel.getIrf().remove(irfparPanelModel.getIrf().size() - 1);
                irfparPanelModel.getFixed().remove(irfparPanelModel.getFixed().size() - 1);
                endUIChange();
            }
            for (int i = 0; i < model.getRowCount(); i++) {
                irfparPanelModel.getIrf().set(i, (Double) model.getValueAt(i, 0));
                irfparPanelModel.getFixed().set(i, (Boolean) model.getValueAt(i, 1));
            }
        }
        if (source == jRDispmufun_no) {
            irfparPanelModel.setDispmu(false);
        }
        if (source == jRDisptaufun_no) {
            irfparPanelModel.setDisptau(false);
        }
        if (source == jRDispmufun_poly) {
            irfparPanelModel.setDispmufun("poly");
            irfparPanelModel.setDispmu(true);
        }
        if (source == jRDisptaufun_poly) {
            irfparPanelModel.setDisptaufun("poly");
            irfparPanelModel.setDisptau(true);
        }
        if (source == jRDispmufun_discrete) {
            irfparPanelModel.setDispmufun("discrete");
            irfparPanelModel.setDispmu(true);
        }
        if (source == jRDisptaufun_discrete) {
            irfparPanelModel.setDisptaufun("discrete");
            irfparPanelModel.setDisptau(true);
        }
        if (source == jParmuTextfield) {
            irfparPanelModel.setParmu((String) value);
        }
        if (source == jPartauTextfield) {
            irfparPanelModel.setPartau((String) value);
        }
        if (source == jTPolyDispersion) {
            irfparPanelModel.setLamda((Double) value);
        }

        endUIChange();
    }

    @Override
    protected void endUIChange() {// signalUIChange() is deprecated{
        dObj.modelUpdatedFromUI();
    }

    @Override
    public void linkButtonPressed(Object arg0, String arg1) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public JComponent getErrorComponent(String arg0) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    class IrfparTableModel extends DefaultTableModel implements TableModelListener {

        private Class[] types = new Class[]{Double.class, Boolean.class};

        private IrfparTableModel() {
            super();
        }

        private IrfparTableModel(Object[] ColNames, int i) {
            super(ColNames, i);
        }

        @Override
        public Class getColumnClass(int c) {
            return types[c];
        }

        @Override
        public void tableChanged(TableModelEvent event) {
            setValue(jTIrfparTable, this);
            jTIrfparTable.repaint();
            endUIChange();
        }
    }
}
